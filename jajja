-- defaultdb.estanteria definition

CREATE TABLE "estanteria" (
  "id_estanteria" int NOT NULL AUTO_INCREMENT,
  "max" int NOT NULL,
  "cantidad" int NOT NULL,
  "gondola" varchar(100) NOT NULL,
  PRIMARY KEY ("id_estanteria")
);


-- defaultdb.experimentador definition

CREATE TABLE "experimentador" (
  "id_experimentador" int NOT NULL,
  "nombre" varchar(100) NOT NULL,
  "celular" bigint NOT NULL,
  "clave" varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  PRIMARY KEY ("id_experimentador")
);


-- defaultdb.producto definition

CREATE TABLE "producto" (
  "id_producto" int NOT NULL AUTO_INCREMENT,
  "nombre_prod" varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  "img" mediumblob,
  "current" int NOT NULL DEFAULT '0',
  "max" int NOT NULL,
  PRIMARY KEY ("id_producto")
);


-- defaultdb.nivel definition

CREATE TABLE "nivel" (
  "id_nivel" int NOT NULL,
  "nombre_nivel" varchar(50) NOT NULL,
  "dificultad" int NOT NULL,
  "id_experimentador" int NOT NULL,
  "activo" tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY ("id_nivel"),
  KEY "fk_nivel_experimentador" ("id_experimentador"),
  CONSTRAINT "fk_nivel_experimentador" FOREIGN KEY ("id_experimentador") REFERENCES "experimentador" ("id_experimentador")
);


-- defaultdb.producto_disponible definition

CREATE TABLE "producto_disponible" (
  "id_producto_disponible" int NOT NULL AUTO_INCREMENT,
  "cantidad" int NOT NULL DEFAULT '0',
  "max" int NOT NULL DEFAULT '25',
  "id_producto" int NOT NULL,
  "id_nivel" int NOT NULL,
  PRIMARY KEY ("id_producto_disponible"),
  KEY "productoDisponible_nivel_FK" ("id_nivel"),
  KEY "productoDisponible_producto_FK" ("id_producto"),
  CONSTRAINT "productoDisponible_nivel_FK" FOREIGN KEY ("id_nivel") REFERENCES "nivel" ("id_nivel"),
  CONSTRAINT "productoDisponible_producto_FK" FOREIGN KEY ("id_producto") REFERENCES "producto" ("id_producto")
);


-- defaultdb.producto_estanteria definition

CREATE TABLE "producto_estanteria" (
  "id_producto_estanteria" int NOT NULL AUTO_INCREMENT,
  "id_estanteria" int NOT NULL,
  "id_producto" int NOT NULL,
  "cant_producto" int DEFAULT NULL,
  "id_nivel" int NOT NULL,
  "nombre" varchar(100) DEFAULT NULL,
  PRIMARY KEY ("id_producto_estanteria"),
  KEY "productoEstanteria_estanteria_FK" ("id_estanteria"),
  KEY "productoEstanteria_nivel_FK" ("id_nivel"),
  KEY "productoEstanteria_producto_FK" ("id_producto"),
  CONSTRAINT "productoEstanteria_estanteria_FK" FOREIGN KEY ("id_estanteria") REFERENCES "estanteria" ("id_estanteria"),
  CONSTRAINT "productoEstanteria_nivel_FK" FOREIGN KEY ("id_nivel") REFERENCES "nivel" ("id_nivel"),
  CONSTRAINT "productoEstanteria_producto_FK" FOREIGN KEY ("id_producto") REFERENCES "producto" ("id_producto")
);


-- defaultdb.resultado definition

CREATE TABLE "resultado" (
  "id_result" int NOT NULL AUTO_INCREMENT,
  "fecha" datetime NOT NULL,
  "id_nivel" int NOT NULL,
  "nombre_persona" varchar(50) NOT NULL,
  "porcentaje" double DEFAULT NULL,
  "tiempo" double DEFAULT NULL,
  "tiempo_estimulo" double DEFAULT NULL,
  PRIMARY KEY ("id_result"),
  KEY "resultado_nivel_FK" ("id_nivel"),
  CONSTRAINT "resultado_nivel_FK" FOREIGN KEY ("id_nivel") REFERENCES "nivel" ("id_nivel")
);


-- defaultdb.resultadoProductosDisp definition

CREATE TABLE "resultadoProductosDisp" (
  "id_result" int NOT NULL,
  "id_producto_disponible" int NOT NULL,
  PRIMARY KEY ("id_result","id_producto_disponible"),
  KEY "resultadoProductosDisp_producdisp_FK" ("id_producto_disponible"),
  CONSTRAINT "resultadoProductosDisp_producdisp_FK" FOREIGN KEY ("id_producto_disponible") REFERENCES "producto_disponible" ("id_producto_disponible"),
  CONSTRAINT "resultadoProductosDisp_resultado_FK" FOREIGN KEY ("id_result") REFERENCES "resultado" ("id_result")
);


insert estanteria:
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(1, 25, 0, '1');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(2, 25, 0, '2');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(3, 25, 0, '3');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(4, 25, 0, '4');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(5, 25, 0, '5');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(6, 25, 0, '6');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(7, 25, 0, '7');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(8, 25, 0, '8');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(9, 25, 0, '9');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(10, 25, 0, '10');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(11, 25, 0, '11');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(12, 25, 0, '12');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(13, 25, 0, '13');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(14, 25, 0, '14');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(15, 25, 0, '15');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(16, 25, 0, '16');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(17, 25, 0, '17');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(18, 25, 0, '18');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(19, 25, 0, '19');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(20, 25, 0, '20');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(21, 25, 0, '21');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(22, 25, 0, '22');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(23, 25, 0, '23');
INSERT INTO defaultdb.estanteria
(id_estanteria, max, cantidad, gondola)
VALUES(24, 25, 0, '24');

DELETE FROM resultadoProductosDisp;
DELETE FROM resultado;
DELETE FROM producto_disponible; 
DELETE FROM producto_estanteria; 
DELETE FROM producto; 
DELETE FROM nivel;
DELETE FROM experimentador;
